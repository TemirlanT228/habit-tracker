services:
  backend:
    build: .
    env_file: .env
    ports:
      - "8000:8000"
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      ALEMBIC_URL: postgresql://postgres:${DB_PASSWORD}@db:5432/${DB_NAME}  
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./alembic/versions:/app/alembic/versions
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        python -c 'import time; time.sleep(5)' &&
        echo 'Running migrations...' &&
        alembic upgrade head &&
        echo 'Starting FastAPI...' &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "

  db:
    image: postgres:alpine
    restart: always
    env_file: .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data  
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:  
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  bot:
    build: .
    env_file: .env
    environment:
      BOT_TOKEN: ${BOT_TOKEN}
      PYTHONPATH: /app
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
    depends_on:
      backend:
        condition: service_started  
    command: python -m app.bot.bot

volumes:  
  postgres_data:
  redis_data: