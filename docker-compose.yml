services:
  backend:
    build: .
    env_file: .env
    ports:
      - "8000:8000"
    environment:
      DB_HOST: db
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./alembic/versions:/app/alembic/versions 
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 3
  db:
    image: postgres:alpine
    restart: always
    env_file: .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
  bot:
    build: .
    env_file: .env
    environment: 
      BOT_TOKEN: ${BOT_TOKEN}
    depends_on:
      backend:
        condition: service_healthy
    command: ["/app/.venv/bin/python", "app/bot/bot.py"]
